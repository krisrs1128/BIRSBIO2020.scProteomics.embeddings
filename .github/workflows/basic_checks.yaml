on: [push]
jobs:
  job1:
    runs-on: ubuntu-latest
    container: bioconductor/bioconductor_docker:devel
    steps:
      - uses: actions/checkout@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - uses: suisei-cn/actions-download-file@v1
        id: download_mibi
        name: Download mibi file
        with:
          url: "https://uwmadison.box.com/shared/static/yl667qrpgr53l9iw7t1bmnmlk6v99n4o.rda"
          target: /github/home/Data/

      - uses: suisei-cn/actions-download-file@v1
        id: download_masstag
        name: Download masstag file
        with:
          url: "https://uwmadison.box.com/shared/static/hcb7i89v5xn90vdf3d5hc0z62rdb1jp9.rda3"
          target: /github/home/Data/

      - name: Downloading rasters
        run: |
          cd /github/home/Data/
          wget https://uwmadison.box.com/shared/static/ojzwxpcl5ujjbm6hzuwqi80crvaef73p.gz
          tar -zxvf ojzwxpcl5ujjbm6hzuwqi80crvaef73p.gz

      - name: Move downloads
        run: |
          cd /github/home/Data/
          mv yl667qrpgr53l9iw7t1bmnmlk6v99n4o.rda mibiSCE.rda
          mv  hcb7i89v5xn90vdf3d5hc0z62rdb1jp9.rda3 masstagSCE.rda

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: /usr/local/lib/R/site-library
          key: ${{ runner.os }}-r-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-1-

      # This lets us augment with additional dependencies
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          apt-get install -y libglpk-dev
          apt-get install -y libgdal-dev libproj-dev
          apt-get install -y software-properties-common
          add-apt-repository ppa:deadsnakes/ppa
          apt-get update
          apt-get install -y python3.7
          apt-get install -y libpython3.7-dev
          apt-get install -y python3-pip
          apt-get install -y python3-venv python3-virtualenv
          add-apt-repository ppa:cran/v8
          apt-get update
          apt-get install -y libnode-dev

      - name: Install dependencies
        run: |
          options(repos = c(CRAN = "https://cran.r-project.org"))
          BiocManager::repositories()
          getwd()
          remotes::install_deps(dependencies = TRUE, repos = BiocManager::repositories())
          remotes::install_cran(c("rcmdcheck", "reticulate", "tensorflow", "keras"))
          tensorflow::install_tensorflow(envname="~/.virtualenvs/r-reticulate")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: krisrs1128/birs2020_scproteomics_embeddings
          tag_with_ref: true
          tag_with_sha: true
          tags: latest

      - name: Build pkgdown
        run: |
           PATH=$PATH:$HOME/bin/ Rscript -e 'pkgdown::build_site(".")'

      # deploy needs rsync? Seems so.
      - name: Install deploy dependencies
        run: |
          apt-get update
          apt-get -y install rsync

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs # The folder the action should deploy.
